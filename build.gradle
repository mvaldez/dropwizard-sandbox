apply plugin: 'application'
apply plugin: 'idea'

version = "0.1.0"

sourceCompatibility = 1.7
targetCompatibility = 1.7

project.ext {
    configPath = "$rootProject.projectDir/config/"
    dropwizardVersion = '0.7.0'
    mysqlVersion = '5.1.22'
    dropwizardJdbiVersion = '0.7.0'
    dropwizardClientVersion = '0.7.0'
    dropwizardAuthVersion = '0.7.0'
    dropwizardAssetsVersion = '0.7.0'
    dropwizardMustacheVersion = '0.7.0'
    junitVersion = '3.8.1'
    dropwizardTesting = '0.7.0'
    hamcrestVersion = '1.3'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.dropwizard',     name: 'dropwizard-views-mustache', version: dropwizardMustacheVersion
    compile group: 'io.dropwizard',     name: 'dropwizard-assets',      version: dropwizardAssetsVersion
    compile group: 'io.dropwizard',     name: 'dropwizard-auth',        version: dropwizardAuthVersion
    compile group: 'io.dropwizard',     name: 'dropwizard-client',      version: dropwizardClientVersion
    compile group: 'io.dropwizard',     name: 'dropwizard-jdbi',        version: dropwizardJdbiVersion
    compile group: 'mysql',             name: 'mysql-connector-java',   version: mysqlVersion
    compile group: 'io.dropwizard',     name: 'dropwizard-core',        version: dropwizardVersion
    testCompile group: 'junit',         name: 'junit',                  version: junitVersion
    testCompile group: 'io.dropwizard',    name: 'dropwizard-testing',  version: dropwizardTesting
    testCompile group: 'org.hamcrest',      name: 'hamcrest-all',       version: hamcrestVersion
}

mainClassName = "com.sandbox.dropwizard.phonebook.MyApplication"

run {
    args 'server', configPath + 'app_config.yml'
}

// Create the executable jar and exclude some certificates
jar {

    manifest {
        attributes "Implementation-Title": "Phonebook App"
        attributes "Implementation-Version": version
        attributes "Main-Class" : mainClassName
    }

    // remove the security files (from mail.jar / activation.jar) so that the jar will be executable.
    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }
}
